{"version":3,"sources":["layouts/Header.tsx","layouts/Footer.tsx","components/Square.tsx","components/Board.tsx","components/NextPlayer.tsx","view/Game.tsx","components/PlayerOneInput.tsx","components/PlayerTwoInput.tsx","view/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Container","fluid","className","Footer","Square","props","isChanceOfX","setIsChanceOfX","value","setValue","onClick","style","width","height","border","Board","useState","isAnyOneWon","setIsAnyOneWon","squares9","setSquare9","index","temSquare9","console","log","winner","squares","lines","i","length","a","b","c","calculateWinner","Swal","fire","title","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","maxWidth","map","NextPlayer","Alert","variant","Game","PlayerOneInput","setPlayerOne","playerOne","setNewPlayerOne","type","onChange","e","target","placeholder","PlayerTwoInput","setPlayerTwo","playerTwo","setNewPlayerTwo","Home","Fragment","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAYeA,EATU,WAGrB,OACI,cAACC,EAAA,EAAD,CAAWC,OAAO,EAAMC,UAAU,4BAAlC,SACI,gDCGGC,EARS,WACpB,OACI,cAACH,EAAA,EAAD,CAAWC,OAAO,EAAMC,UAAU,6BAAlC,SACI,qD,OCuBGE,EApBoB,SAACC,GAChC,IAAOC,EAA8CD,EAA9CC,YAAaC,EAAiCF,EAAjCE,eAAeC,EAAkBH,EAAlBG,MAAMC,EAAYJ,EAAZI,SAWzC,OAEI,qBAAKC,QAVW,WACH,MAAVF,IAGHC,EAASH,EAAc,IAAM,KAC7BC,GAAgBD,KAKWK,MAAO,CAACC,MAAO,QAASC,OAAQ,QAASC,OAAQ,mBACvEZ,UAAU,sBADf,SAEI,sBAAMA,UAAU,KAAhB,SAAsBM,O,gBCiEnBO,EA/EkB,SAACV,GAC9B,IAAOC,EAA+BD,EAA/BC,YAAaC,EAAkBF,EAAlBE,eACpB,EAAsCS,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BF,mBAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAjF,mBAAOG,EAAP,KAAiBC,EAAjB,KAGMX,EAAW,SAACY,GACd,IAAIC,EAAaH,EACjBG,EAAWD,GAASf,EAAc,IAAM,IACxCc,EAAWE,GACXC,QAAQC,IAAIL,EAAS,IAErB,IAAMM,EA6BV,SAAyBC,GAWrB,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GAClE,OAAON,EAAQI,GAGvB,OAAO,KA9CQG,CAAgBd,GAC/BI,QAAQC,WAAWC,GACJ,MAAXA,GAA6B,MAAXA,IAGfR,EACCiB,IAAKC,KAAK,CACNC,MAAO,2BACPC,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,MAClBC,eAAe,OAChBC,MAAK,SAACC,GAEDA,EAAOC,cACPT,IAAKC,KAAK,mBAAoB,GAAI,WAClCjB,GAAe,GACfE,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,WAK5DF,GAAe,GACfgB,IAAKC,KAAgB,MAAXV,EAAiB,mBAAqB,uBA8B5D,OACQ,cAACzB,EAAA,EAAD,CAAWE,UAAU,SAArB,SAEI,qBAAKS,MAAO,CAACiC,SAAU,SAAvB,SAPDzB,EAAS0B,KAAI,SAACrC,EAAea,GAAhB,OAChB,cAAC,EAAD,CAAQf,YAAaA,EAAaC,eAAgBA,EAAgBE,SAAU,kBAAMA,EAASY,IACnFb,MAAOA,Y,QC5DZsC,EAP+B,SAACzC,GAC3C,OACI,eAAC0C,EAAA,EAAD,CAAOC,QAAS3C,EAAMC,YAAY,UAAY,OAAQK,MAAO,CAACiC,SAAU,SAAU1C,UAAU,SAA5F,UACKG,EAAMC,YAAa,WAAY,WADpC,YCSO2C,EAXK,WAChB,MAAsCjC,oBAAS,GAA/C,mBAAOV,EAAP,KAAoBC,EAApB,KACA,OACG,sBAAKL,UAAU,aAAf,UAEI,cAAC,EAAD,CAAOI,YAAaA,EAAaC,eAAgBA,IACjD,cAAC,EAAD,CAAYD,YAAaA,QCOrB4C,EAdoC,SAAC7C,GAChD,IAAO8C,EAAc9C,EAAd8C,aACP,EAAkCnC,mBAAS,IAA3C,mBAAOoC,EAAP,KAAiBC,EAAjB,KAKA,OACI,gCACI,uBAAOC,KAAK,OAAO9C,MAAO4C,EAAWG,SAAU,SAAAC,GAAC,OAAEH,EAAgBG,EAAEC,OAAOjD,QAAQkD,YAAa,oBAChG,wBAAQhD,QAPE,WACdyC,EAAaC,GACbC,EAAgB,KAKZ,oBCIGM,EAdoC,SAACtD,GAChD,IAAOuD,EAAcvD,EAAduD,aACP,EAAkC5C,mBAAS,IAA3C,mBAAO6C,EAAP,KAAiBC,EAAjB,KAKA,OACI,gCACI,uBAAOR,KAAK,OAAO9C,MAAOqD,EAAWN,SAAU,SAAAC,GAAC,OAAEM,EAAgBN,EAAEC,OAAOjD,QAAQkD,YAAa,oBAChG,wBAAQhD,QAPE,WACdkD,EAAaC,GACbC,EAAgB,KAKZ,oBCcGC,EAxBQ,WACnB,MAAkC/C,mBAAS,IAA3C,mBAAOoC,EAAP,KAAkBD,EAAlB,KACA,EAAkCnC,mBAAS,IAA3C,mBAAO6C,EAAP,KAAkBD,EAAlB,KACA,OACI,eAAC,IAAMI,SAAP,WACI,sBAAK9D,UAAU,QAAf,UACI,+BAAKkD,EAAL,OAAoBS,KACpB,gCACI,+CAAkBT,EAAlB,OACA,cAAC,EAAD,CAAgBD,aAAcA,OAGlC,gCACI,8CAAiBU,EAAjB,OACA,cAAC,EAAD,CAAgBD,aAAcA,UAItC,cAAC,EAAD,Q,MCAGK,MAZf,WAEE,OACE,sBAAK/D,UAAU,MAAf,UACG,cAAC,EAAD,IAEC,cAAC,EAAD,IACA,cAAC,EAAD,QCLOgE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e1d5d2a1.chunk.js","sourcesContent":["import React from \"react\";\nimport {Container} from \"react-bootstrap\";\n\nconst Header: React.FC = () => {\n\n\n    return (\n        <Container fluid={true} className=\"p-3 h3 bg-dark text-white\">\n            <p>Tic Tac Toe </p>\n        </Container>\n    )\n}\nexport default Header;","import React from \"react\";\nimport {Container} from \"react-bootstrap\";\n\nconst Footer : React.FC=()=>{\n    return(\n        <Container fluid={true} className=\"pt-3 h5 bg-dark text-white\">\n            <span>Hansa Sandamal</span>\n\n        </Container>\n    )\n}\nexport default Footer;","import React from \"react\";\n\ntype SquareProps = {\n    isChanceOfX: boolean;\n    setIsChanceOfX: (value: boolean) => void;\n    value: string\n    setValue:(value: string) => void;\n}\n\nconst Square:React.FC<SquareProps>=(props)=>{\n    const {isChanceOfX, setIsChanceOfX,value,setValue} = props;\n    // const [value, setValue] = useState(\" \");\n\n    const handleClick = () => {\n        if(value !== \" \") {\n            return;\n        }\n        setValue(isChanceOfX ? \"X\" : \"O\");\n        setIsChanceOfX(!isChanceOfX);\n    }\n\n    return(\n\n        <div onClick={handleClick} style={{width: '100px', height: '100px', border: '1px solid black'}}\n             className=\"pt-4 m-0 float-left\">\n            <span className=\"h1\">{value}</span>\n        </div>\n    )\n}\nexport default Square;","import React, {useState} from \"react\";\nimport './Square';\nimport {Container} from \"react-bootstrap\";\nimport Square from \"./Square\";\nimport Swal from 'sweetalert2';\ntype BoardProps = {\n    isChanceOfX: boolean;\n    setIsChanceOfX: (value: boolean) => void;\n\n}\n\nconst Board:React.FC<BoardProps>=(props)=>{\n    const {isChanceOfX, setIsChanceOfX} = props;\n    const [isAnyOneWon, setIsAnyOneWon] = useState(false);\n    const [squares9, setSquare9] = useState([\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]);\n\n\n    const setValue = (index: number) => {\n        let temSquare9 = squares9;\n        temSquare9[index] = isChanceOfX ? \"X\" : \"O\";\n        setSquare9(temSquare9);\n        console.log(squares9[0]);\n\n        const winner = calculateWinner(squares9);\n        console.log(typeof winner);\n        if (winner === \"O\" || winner === \"X\") {\n\n            // Ask to make new game with clean board.\n            if(isAnyOneWon){\n                Swal.fire({\n                    title: 'Do you need next chance?',\n                    showDenyButton: true,\n                    showCancelButton: true,\n                    confirmButtonText: `Yes`,\n                    denyButtonText: `No`,\n                }).then((result) => {\n                    /* Read more about isConfirmed, isDenied below */\n                    if (result.isConfirmed) {\n                        Swal.fire('New game created', '', 'success');\n                        setIsAnyOneWon(false);\n                        setSquare9([\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]);\n\n                    }\n                })\n            } else {\n                setIsAnyOneWon(true);\n                Swal.fire(winner === \"X\" ? \"Player 1 has won\" : \"Player 2 has won\");\n            }\n\n        }\n\n    }\n    function calculateWinner(squares: string[]) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return squares[a];\n            }\n        }\n        return null;\n    }\n    const render9Blocks = () => {\n        return squares9.map((value: string, index: number) =>\n            <Square isChanceOfX={isChanceOfX} setIsChanceOfX={setIsChanceOfX} setValue={() => setValue(index)}\n                    value={value}/>)\n    }\n    return(\n            <Container className=\"m-auto\">\n\n                <div style={{maxWidth: '300px'}}>\n                    {\n                        render9Blocks()\n                    }\n                </div>\n               \n            </Container>\n\n\n    )\n}\nexport default Board;","import React from \"react\";\nimport {Alert} from \"react-bootstrap\";\n\ntype NextPlayerProps = {\n    isChanceOfX: boolean;\n}\n\nconst NextPlayer: React.FC<NextPlayerProps> = (props) => {\n    return (\n        <Alert variant={props.isChanceOfX?'warning' : 'info'} style={{maxWidth: '300px'}} className=\"m-auto\">\n            {props.isChanceOfX? \"Player 1\": \"Player 2\"}     {/* Ternary operation = if else*/}\n        </Alert>\n    )\n}\nexport default NextPlayer;","import React, {useState} from \"react\";\n\n\nimport Board from \"../components/Board\";\nimport NextPlayer from \"../components/NextPlayer\";\n\n\nconst Game:React.FC=()=>{\n    const [isChanceOfX, setIsChanceOfX] = useState(true);\n    return(\n       <div className=\"min-vh-100\">\n\n           <Board isChanceOfX={isChanceOfX} setIsChanceOfX={setIsChanceOfX} />\n           <NextPlayer isChanceOfX={isChanceOfX}/>\n       </div>\n\n    )\n}\nexport default Game;","import React, {useState} from \"react\";\n\ntype PlayerOneInputProps={\n    setPlayerOne:(value:string)=>void;\n}\n\nconst PlayerOneInput:React.FC<PlayerOneInputProps>=(props)=>{\n    const {setPlayerOne}=props;\n    const [playerOne,setNewPlayerOne]=useState('');\n    const handleClick=()=>{\n        setPlayerOne(playerOne);\n        setNewPlayerOne(\"\");\n    }\n    return(\n        <div >\n            <input type=\"text\" value={playerOne} onChange={e=>setNewPlayerOne(e.target.value)} placeholder={\"Player One Name\"}/>\n            <button onClick={handleClick}>OK</button>\n        </div>\n    )\n}\nexport default PlayerOneInput;","import React, {useState} from \"react\";\n\ntype PlayerTwoInputProps={\n    setPlayerTwo:(value:string)=>void;\n}\n\nconst PlayerTwoInput:React.FC<PlayerTwoInputProps>=(props)=>{\n    const {setPlayerTwo}=props;\n    const [playerTwo,setNewPlayerTwo]=useState('');\n    const handleClick=()=>{\n        setPlayerTwo(playerTwo);\n        setNewPlayerTwo(\"\");\n    }\n    return(\n        <div >\n            <input type=\"text\" value={playerTwo} onChange={e=>setNewPlayerTwo(e.target.value)} placeholder={\"Player Two Name\"}/>\n            <button onClick={handleClick}>OK</button>\n        </div>\n    )\n}\nexport default PlayerTwoInput;","import React, {useState} from \"react\";\nimport Game from \"./Game\";\nimport PlayerOneInput from \"../components/PlayerOneInput\";\nimport PlayerTwoInput from \"../components/PlayerTwoInput\";\n\n\nconst Home: React.FC = () => {\n    const [playerOne, setPlayerOne] = useState('');\n    const [playerTwo, setPlayerTwo] = useState('');\n    return (\n        <React.Fragment>\n            <div className='names'>\n                <h1>{playerOne} vs {playerTwo}</h1>\n                <div>\n                    <h3>Player one : {playerOne} </h3>\n                    <PlayerOneInput setPlayerOne={setPlayerOne}/>\n\n                </div>\n                <div>\n                    <h3>Player two: {playerTwo} </h3>\n                    <PlayerTwoInput setPlayerTwo={setPlayerTwo}/>\n                </div>\n\n            </div>\n            <Game/>\n        </React.Fragment>\n\n    )\n\n}\nexport default Home;","import React from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./layouts/Header\";\nimport Footer from \"./layouts/Footer\";\n\nimport Home from \"./view/Home\";\n\nimport './assetes/Main.scss';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n       <Header />\n\n        <Home />\n        <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}